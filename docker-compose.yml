version: "3.8"
services:
  fb-feed-demo-postgres:
    image: postgres:16.1-alpine
    restart: unless-stopped
    #TODO turn on logging for testing
    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "clients_database" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      #TODO Vault OR env_file
      POSTGRES_DB: "maindb"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
#    volumes:
#      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
    ports:
      - 5433:5432

  fb-feed-demo-zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"


  fb-feed-demo-kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      fb-feed-demo-zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: fb-feed-demo-zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://fb-feed-demo-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://fb-feed-demo-kafka:9092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    image: wurstmeister/kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
##      KAFKA_CREATE_TOPICS: "post_events:1:1" # Optional: Automatically create a topic
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - zookeeper